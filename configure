#!/bin/sh
### Custom configure script of Dinit.
# For compatability you don't need to use autotools.
# Do you disagree? I show you!
# Thanks Skarnet.org (Laurent Baracot ?) for s6's configure script. That's "my source of inspiration" to make this.

## Initial prepartion
cd $(dirname "$0")
. build/version.conf

## Helper funcations
# I suggest do not comment this thing but if your system
# is don't have `printf` you need to comment this thing.
# See http://www.etalabs.net/sh_tricks.html
echo() {
    IFS=" "
    printf %s\\n "$*"
}

info() {
    echo "Info: $@"
}

error() {
    echo "Error: $@"
    exit 1
}

findcxx() {
    info Checking C++ Compiler...
    if test "$CXX" ; then
        info "$CXX" is user/system prefered C++ compiler.
        compiler="$CXX"
    else
        for guess in c++ g++ clang++ ""; do
            if test -z "$guess"; then
                break # None found
            fi
            type "$guess" > /dev/null
            if test $? = 0; then
                compiler="$guess"
                info "$compiler" compiler is found.
                break # Found
            fi
        done
    fi
    if test -z "$compiler"; then
       error No C++ compiler found!
    fi
}

cxx_works() {
    info Checking C++ compiler works...
    echo "#include <iostream>" > test.cc
    echo "int main(int argc, char **argv) { return 0; }" >> test.cc
    $compiler -o test test.cc
    if [ $? != 0 ]; then
        rm -f test*
        error Seems like C++ compiler is not working!
    else
        rm -f test
        info Ok.
    fi
}

usage() {
    cat << EOF
Usage: $0 [OPTION]...

Defaults for the options are specified in brackets.

  --help                        This help message.

Installation directories:
  --prefix=PREFIX               Main Installtion prefix [/]
  --shutdown-prefix=PREFIX      Name prefix for shutdown, poweroff, reboot, halt programs []
  --sbindir=SBINDIR             Dinit executables [PREFIX/sbin]
  --mandir=MANDIR               Dinit man-pages location [PREFIX/usr/share/man]
  --syscontrolsocket=SOCKETPATH Dinitctl socket location [PREFIX/run/dinitctl]

Optional options:
  --enable-shutdown             Build shutdown, poweroff, reboot, halt programs [Enabled on Linux based systems]
  --disable-shutdown            Don't build shutdown, poweroff, reboot, halt programs
  --enable-cgroups              Enable Cgroups support [Enabled only on Linux based systems]
  --disable-cgroups             Disable Cgroups support

Environment variables can be used:
  CXX                           If you wanna use specifice C++ compiler.
  CUSTOM_CXXOPTS                If you wanna use some arguments in C++ compiler command line.
                                  Note: You don't need to set required flags for Building Dinit!
                                  such as -std=c++11
  CUSTOM_LDFLAGS                If you wanna use some arguments in Linker command line.

See BUILD file for more information.

EOF
    exit 0
}

## General Defines
PLATFORM=$(uname)
CXXOPTS="-std=c++11 -Wall"
PREFIX="/usr"
SBINDIR="$PREFIX/sbin"
MANDIR="$PREFIX/share/man/"
SYSCONTROLSOCKET="$PREFIX/run/dinitctl"
SHUTDOWN_PREFIX=""
if [ "$PLATFORM" = "Linux" ]; then
    BUILD_SHUTDOWN=yes
    SUPPORT_CGROUPS=1
else
    BUILD_SHUTDOWN=no
    SUPPORT_CGROUPS=0
fi

## Flag praser
for arg in "$@"; do
    case "$arg" in
        --help) usage ;;
        --prefix=*) PREFIX="${arg#*=}" && shift ;;
        --sbindir=*) SBINDIR="$PREFIX/${arg#*=}" && shift ;;
        --mandir=*) MANDIR="$PREFIX/${arg#*=}" && shift ;;
        --syscontrolsocket=*) SYSCONTROLSOCKET="$PREFIX/${arg#*=}" && shift ;;
        --shutdown-prefix=*) SHUTDOWN_PREFIX="${arg#*=}" && shift ;;
        --enable-shutdown) BUILD_SHUTDOWN=yes ;;
        --disable-shutdown) BUILD_SHUTDOWN=no ;;
        --enable-cgroups) SUPPORT_CGROUPS=1 ;;
        --disable-cgroups) SUPPORT_CGROUPS=0 ;;
        --cxx-check) findcxx && cxx_works && exit 0 ;;
        *) continue ;;
    esac
done

## Find and prepare C++ compiler
findcxx
cxx_works

## Praser options
#ToDo

## Create mconfig
info Generating $(dirname $0)/mconfig...
cat << EOF > $(dirname $0)/mconfig
## Generated by "$0"
# Installation path options.

SBINDIR=$SBINDIR
MANDIR=$MANDIR
SYSCONTROLSOCKET=$SYSCONTROLSOCKET

# General build options.

# Linux (GCC). Note with GCC 5.x/6.x you must use the old ABI, with GCC 7.x you must use
# the new ABI. See BUILD file for more information.
CXX=$compiler
#CXXOPTS=-D_GLIBCXX_USE_CXX11_ABI=1 -std=c++11 -Os -Wall -flto -fno-rtti -fno-plt
CXXOPTS=$CXXOPTS
CUSTOM_CXXOPTS=$CUSTOM_CXXOPTS
LDFLAGS=$LDFLAGS
CUSTOM_LDFLAGS=$CUSTOM_LDFLAGS
BUILD_SHUTDOWN=$BUILD_SHUTDOWN
SANITIZEOPTS=$SANITIZEROPTS

# Notes:
#   -D_GLIBCXX_USE_CXX11_ABI=1 : force use of new ABI, see above / BUILD
#   -fno-rtti (optional) : Dinit does not require C++ Run-time Type Information
#   -fno-plt  (optional) : Recommended optimisation
#   -flto     (optional) : Perform link-time optimisation
#   -fsanitize=address,undefined :  Apply sanitizers (during unit tests)

# Feature settings
SUPPORT_CGROUPS=$SUPPORT_CGROUPS

# Optional settings
SHUTDOWN_PREFIX=$SHUTDOWN_PREFIX
EOF
info $(dirname $0)/mconfig has generated.
info Done!
exit 0
